/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'org.moditect.gradleplugin' version '1.0.0-rc3'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.23.3'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'fr.osallek:eu4-parser:1.1.0'
    implementation 'org.controlsfx:controlsfx:11.0.3'
    implementation 'com.twelvemonkeys.imageio:imageio-tga:3.5'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.14.0'
    implementation files("$buildDir/generated-modules/commons-lang3-3.11.jar")
    implementation files("$buildDir/generated-modules/commons-collections4-4.4.jar")
    implementation files("$buildDir/generated-modules/commons-io-2.7.jar")
}

group = 'fr.osallek'
version = '1.1.0'
description = 'Eu4SaveEditor'
java.sourceCompatibility = JavaVersion.VERSION_15
java.targetCompatibility = JavaVersion.VERSION_15

List<String> runArgs = [
        "--add-exports", "javafx.base/com.sun.javafx.event=org.controlsfx.controls",
        "--add-exports", "org.controlsfx.controls/impl.org.controlsfx.autocompletion=fr.osallek.eu4saveeditor",
        "-Xmx2g"]

application {
    mainModule = 'fr.osallek.eu4saveeditor'
    mainClass = 'fr.osallek.eu4saveeditor.Main'
    applicationDefaultJvmArgs = runArgs
}

javafx {
    version = '11.0.2'
    modules = ['javafx.controls', 'javafx.base', 'javafx.swing', 'javafx.fxml', 'javafx.media', 'javafx.graphics']
}

addDependenciesModuleInfo {
    overwriteExistingFiles = true
    jdepsExtraArgs = ['-q']
    outputDirectory = file("$buildDir/generated-modules")
    modules {
        module {
            artifact 'org.apache.commons:commons-lang3:3.11'
            moduleInfoSource = '''
                module org.apache.commons.lang3 {
                    requires java.se;
                    exports org.apache.commons.lang3;
                    exports org.apache.commons.lang3.function;
                    exports org.apache.commons.lang3.arch;
                    exports org.apache.commons.lang3.reflect;
                }
            '''
        }
        /*module {
            artifact 'org.apache.commons:commons-collections4:4.4'
            moduleInfoSource = '''
                module org.apache.commons.collections4 {
                    requires java.se;
                    exports org.apache.commons.collections4;
                }
            '''
        }*/
        /*module {
            artifact 'commons-io:commons-io:2.7'
            moduleInfoSource = '''
                module org.apache.commons.io {
                    requires java.se;

                    exports org.apache.commons.io;
                }
            '''
        }*/
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
